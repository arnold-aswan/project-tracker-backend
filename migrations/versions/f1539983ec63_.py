# """empty message

# Revision ID: f1539983ec63
# Revises: 56491e7e6630
# Create Date: 2023-10-30 11:56:08.953802

# """
# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision = 'f1539983ec63'
# down_revision = '56491e7e6630'
# branch_labels = None
# depends_on = None


# def upgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('admin', schema=None) as batch_op:
#         batch_op.add_column(sa.Column('username', sa.String(length=255), nullable=False))
#         batch_op.add_column(sa.Column('email', sa.String(length=255), nullable=False))
#         batch_op.add_column(sa.Column('password', sa.String(length=255), nullable=False))
#         batch_op.add_column(sa.Column('first_name', sa.String(length=80), nullable=True))
#         batch_op.add_column(sa.Column('last_name', sa.String(length=80), nullable=True))
#         batch_op.create_unique_constraint(None, ['email'])
#         batch_op.create_unique_constraint(None, ['username'])

#     # ### end Alembic commands ###


# def downgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('admin', schema=None) as batch_op:
#         batch_op.drop_constraint(None, type_='unique')
#         batch_op.drop_constraint(None, type_='unique')
#         batch_op.drop_column('last_name')
#         batch_op.drop_column('first_name')
#         batch_op.drop_column('password')
#         batch_op.drop_column('email')
#         batch_op.drop_column('username')

#     # ### end Alembic commands ###

"""empty message

Revision ID: f1539983ec63
Revises: 56491e7e6630
Create Date: 2023-10-30 11:56:08.953802

"""
from alembic import op
import sqlalchemy as sa

# ...

def upgrade():
    # Add columns to the 'admin' table
    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('email', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('password', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('first_name', sa.String(length=80), nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.String(length=80), nullable=True))

    # Create unique constraints with names 'uq_admin_email' and 'uq_admin_username'
    op.create_unique_constraint('uq_admin_email', 'admin', ['email'])
    op.create_unique_constraint('uq_admin_username', 'admin', ['username'])

def downgrade():
    # Remove the unique constraints
    op.drop_constraint('uq_admin_email', 'admin', type_='unique')
    op.drop_constraint('uq_admin_username', 'admin', type_='unique')

    # Remove the added columns
    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')
        batch_op.drop_column('password')
        batch_op.drop_column('email')
        batch_op.drop_column('username')
